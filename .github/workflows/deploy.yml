name: Build and Deploy

on:
  push:
    branches: [staging, main]  # Fixed: Removed extra indentation
  pull_request:
    branches: [staging, main]  # Fixed: Separated from push trigger
  workflow_dispatch:           # Manual trigger

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ github.ref_name == 'main' && secrets.PROD_AWS_ROLE || secrets.STAGING_AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build and push image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # Added missing variable
          ECR_REPOSITORY: ${{ github.ref_name == 'main' && secrets.PROD_ECR_REPO || secrets.STAGING_ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ github.ref_name == 'main' && secrets.PROD_AWS_ROLE || secrets.STAGING_AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to App Runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: ${{ github.ref_name == 'main' && secrets.PROD_APP_RUNNER_NAME || secrets.STAGING_APP_RUNNER_NAME }}  # Changed to use secrets
          image: ${{ needs.build-and-test.outputs.image }}  # Fixed reference
          region: ${{ secrets.AWS_REGION }}
          cpu: 1
          memory: 2
          port: 3000
